---
import { Icon } from "astro-icon";
import { Picture } from "@astrojs/image/components";

interface Item {
  title: string;
  description?: string;
  icon?: string;
}

export interface Props {
  title?: string;
  subtitle?: string;
  highlight?: string;
  content?: string;
  items?: Array<Item>;
  image?: string | any; // TODO: find HTMLElementProps
  isReversed?: boolean;
  isAfterContent?: boolean;
}

const {
  title = await Astro.slots.render("title"),
  subtitle = await Astro.slots.render("subtitle"),
  highlight,
  content = await Astro.slots.render("content"),
  items = [],
  image = await Astro.slots.render("image"),
  isReversed = false,
  isAfterContent = false,
} = Astro.props;
---

<section
  class:list={[
    { "pt-0 md:pt-0": isAfterContent },
    "font-poppins py-16 md:py-20",
  ]}
>
  <div class="max-w-xl sm:mx-auto lg:max-w-2xl">
    {
      (title || subtitle || highlight) && (
        <div class="mb-10 md:mx-auto text-center md:mb-12 max-w-3xl">
          {highlight && (
            <p
              class="text-base text-primary font-semibold tracking-wide uppercase"
              set:html={highlight}
            />
          )}
          {title && (
            <h2
              class="text-4xl md:text-5xl font-bold leading-tighter tracking-tighter mb-4 font-heading"
              set:html={title}
            />
          )}

          {subtitle && (
            <p
              class="max-w-3xl mx-auto sm:text-center text-xl text-muted "
              set:html={subtitle}
            />
          )}
        </div>
      )
    }
  </div>
  <div class="text-justify mx-auto max-w-7xl p-4 md:px-8">
    <div class={`md:flex ${isReversed ? "md:flex-row-reverse" : ""} md:gap-16`}>
      <div class="md:basis-1/2 self-center">
        {content && <div class="mb-12 text-lg " set:html={content} />}
        {
          items && (
            <div class="space-y-8">
              {items.map(({ title: title2, description, icon }) => (
                <div class="flex">
                  <div class="ml-4">
                    {title2 && (
                      <h3 class="inactive text-lg font-medium leading-6 dark:text-white">
                        {title2}
                      </h3>
                    )}
                    {description && (
                      <p
                        class="inactive mt-2 text-muted "
                        set:html={description}
                      />
                    )}
                  </div>
                </div>
              ))}
            </div>
          )
        }
      </div>
      <div aria-hidden="true" class="mt-10 md:mt-0 md:basis-1/2">
        {
          image && (
            <div class="relative m-auto max-w-4xl">
              {typeof image === "string" ? (
                <Fragment set:html={image} />
              ) : (
                <Picture
                  id="astronaut"
                  class="mx-auto w-full"
                  width={500}
                  height={500}
                  widths={[400, 768]}
                  sizes="(max-width: 768px) 100vw, 432px"
                  aspectRatio="500:500"
                  {...image}
                />
              )}
            </div>
          )
        }
      </div>
    </div>
  </div>
</section>

<style>
    @keyframes float {
      0% {
        transform: translate3d(0, 0, 0);
      }
  
      100% {
        transform: translate3d(0, 30px, 0);
      }
    }
  
    #astronaut {
      animation: float linear 2.5s infinite alternate;
    }
  
    @media (prefers-reduced-motion: reduce) {
      #astronaut {
        @apply animate-none;
      }
  
      :global(#starfield) {
        @apply hidden;
      }
  
      #splash-bg-fallback {
        @apply block;
      }
    }
  </style>
